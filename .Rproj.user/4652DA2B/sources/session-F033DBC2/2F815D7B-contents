---
title: "Youtube Video Trending Analysis"
output: 
  flexdashboard::flex_dashboard:
    orientation: rows
    vertical_layout: scroll
    theme:
      bootswatch: cyborg
---

```{r setup, include=FALSE}
# import library
library(flexdashboard)
library(tidyverse)
library(scales)
library(glue)
library(plotly)
library(lubridate)
options(scipen = 100)

# read data
vids <- read.csv("data_input/youtubetrends.csv", stringsAsFactors = TRUE)

# cleansing data
vids_clean <- vids %>% 
  # deselect beberapa kolom
  select(-c(comments_disabled, ratings_disabled, video_error_or_removed)) %>% 
  
  mutate(
    # mengubah tipe data
    trending_date = ymd(trending_date),
    publish_time = ymd_hms(publish_time),
    title = as.character(title),
    channel_title = as.character(channel_title),
    
    # menambahkan kolom baru
    likesp = likes/views,
    dislikep = dislikes/views,
    commentp = comment_count/views
  )
```

Row {data-width=650}
-----------------------------------------------------------------------

###  

```{r}
vids_count <- vids_clean %>% 
  group_by(category_id) %>% 
  summarise(count = n()) %>% 
  ungroup() %>% 
  arrange(-count)

vids_count <- vids_count %>% 
  mutate(label = glue(
    "Category {category_id}
    Video Count: {count}"
  ))

plot1 <- ggplot(data = vids_count, aes(x = count, 
                              y = reorder(category_id, count),
                              text = label)) + # reorder(A, berdasarkan B)
  geom_col(aes(fill = count)) +
  scale_fill_gradient(low="red", high="black") +
  labs(title = "Trending Categories of YouTube US 2017",
       x = "Video Count",
       y = NULL) +
  theme_minimal() +
  theme(legend.position = "none") 

ggplotly(plot1, tooltip = "text")
```

Row {data-width=350}
-----------------------------------------------------------------------

###  

```{r}
vids_10 <- vids_clean %>% 
  filter(category_id == "Entertainment") %>% 
  group_by(channel_title) %>% 
  summarise(mean_viewers = mean(views)) %>% 
  ungroup() %>% 
  arrange(-mean_viewers) %>% 
  head(10)

vids_10 <- vids_10 %>% 
  mutate(
    label2 = glue(
      "Channel: {channel_title}
      Average Views: {comma(round(mean_viewers, 2))}"
    )
  )

plot2 <- ggplot(vids_10, aes(x = reorder(channel_title, mean_viewers), 
                    y = mean_viewers,
                    text = label2)) +
  geom_segment(aes(x=reorder(channel_title, mean_viewers), xend=reorder(channel_title, mean_viewers), y=0,yend=mean_viewers), color="red") +
  geom_point(color="black") +
  coord_flip() +
  scale_y_continuous(labels = comma) +
  labs(title = "Top 10 Channel on Entertainment",
       x = NULL,
       y = "Average View") +
  theme_minimal()

ggplotly(plot2, tooltip = "text")
```

###  

```{r}
vids_trend <- vids_clean %>% 
  filter(category_id == "Entertainment") %>% 
  group_by(publish_hour) %>% 
  summarise(avg_views = mean(views)) %>% 
  ungroup() %>% 
  mutate(label3 = glue(
    "Publish Hour: {publish_hour}
    Average Views: {comma(round(avg_views, 2))}"
  ))

plot3 <- ggplot(vids_trend, aes(x=publish_hour, y= avg_views))+
  geom_line(col="red") +
  geom_point(aes(text=label3), col="black") +
  scale_y_continuous(labels = comma) +
  scale_x_continuous(breaks = seq(0,23,1)) +
  labs(
    title = "Viewers Activity of Entertainment Videos",
    x = "Publish Hours",
    y = "Average Views"
  ) +
  theme_minimal()

ggplotly(plot3, tooltip = "text")
```

